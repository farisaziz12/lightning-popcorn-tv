{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || (2048 / this.getPrecision());\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth += (10 - innerWidth);\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            let words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ',letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ' ' + words[j];\n                }\n            }\n\n            resultLines.push(result);\n            result = '';\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    \n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        return new TextTextureRenderer(stage, canvas, settings);\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        // Inherit font face from stage.\n        if (args.fontFace === null) {\n            args.fontFace = this.stage.getOption('defaultFontFace');\n        }\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = new TextTextureRenderer(this.stage, canvas, args);\n            const p = renderer.draw();\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        let item = this._items[index];\n\n        if (item.ref) {\n            this._refs[item.ref] = undefined;\n        }\n\n        this._items.splice(index, 1);\n\n        this.onRemove(item, index);\n\n        return item;\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {[ref]: {}};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOfScreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = null;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = {format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE};\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2/w, 2/h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n    \n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n\n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n        this._removeKeyHandler();\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    loop() {\n        let self = this;\n        let lp = function() {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.drawFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLCanvasElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    loadSrcTexture({src, hasAlpha}, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function(err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function({imageBitmap, hasAlphaChannel}) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: {src: src},\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function() {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0,5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function(err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function() {\n                cb(null, {\n                    source: image,\n                    renderInfo: {src: src},\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function() {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n    \n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            const pixels = new Uint8Array(4);\n            const gl = this.stage.gl;\n            gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n    drawFrame() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n\n        this.emit('frameStart');\n\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n\n        this.emit('update');\n\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    renderFrame() {\n        this.ctx.frame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y){\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x,y,children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;"],"names":["StageUtils","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_getTotalCrossAxisSize","crossAxisSize","_getSpacing","lines","_lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","align","recursiveResizeOccured","setItemPositions","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","SizeGrower","_grownSize","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","grow","maxSize","_getMainAxisMaxSizeSetting","maxGrow","ItemPositioner","lineLayout","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","getGrownSize","shrinker","getShrunkSize","position","_calcCrossAxisMaxLayoutSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","performLayout","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","getMainAxisMinSize","_getCrossAxisMinSize","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","finalize","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","layoutLines","mainAxisContentSize","init","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","changedDimensions","changedContents","patchObject","f","direction","_changedContents","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","_changedDimensions","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","resizeAxis","getTotalMargin","getMarginOffset","_getMainAxisPadding","_getMainAxisMargin","_getCrossAxisLayoutSize","parseInt","_changed","_getDefaultShrink","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","isChanged","layoutTree","_checkEnabled","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_ensureFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","visible","isFlexItem","_clearFlexItemsCache","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","shrunk","_enableFlex","patch","_disableFlex","_getFlexItems","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","has","add","delete","becomesUsed","becomesUnused","cb","texture","elements","element","active","isUsed","load","cancel","isLoading","free","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","update","frameCounter","forEachActiveElement","forceRenderUpdate","_updateTextureCoords","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","forEachEnabledElement","_updateDimensions","e","onTextureSourceLoadError","isLoaded","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","textureManager","updateResultTexture","hasEnabledElements","resultTexture","getResultTexture","nativeTexture","replaceNativeTexture","core","setHasRenderUpdates","_hasRenderUpdates","release","releaseRenderTexture","allocateRenderTexture","updateRenderToTextureEnabled","_setRecalc","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_sr","sin","_cr","cos","_setLocalTransform","_updateLocalTranslate","_recalcLocalTranslate","_triggerRecalcTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removed","added","order","fromIndex","toIndex","isEstimate","ulx","uly","brx","bry","textureSource","root","coordsWidth","coordsHeight","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","prevZContext","_getZIndexedDescs","isAncestorOf","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","texturizer","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_stashedTexCoords","_stashedColors","layoutFlexTree","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","_hasRenderContext","updateTreeOrder","useRenderToTexture","mustRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","defaultShader","cleared","ignore","cache","hasResultTexture","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","renderTextureReused","getRenderTexture","setTexturizer","_stashTexCoords","colorize","_stashColors","_unstashColors","_unstashTexCoords","ptr","m","j","sort","mergeResult","relX","relY","inBound","inScissor","collectAtCoord","tx","ty","getCornerPoints","sc","_ensureLayout","_disableFuncX","setOriginalXWithoutUpdatingLayout","_updateLocalTranslateDelta","forceLayout","_disableFuncY","setOriginalYWithoutUpdatingLayout","_updateLocalTransform","scaleX","prev","_updateLocalAlpha","_updateEnabledFlag","setVisible","zIndex","prevShader","shader","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","wrapper","arg1","arg2","arg3","off","__originalFunc","on","current","l","listeners","map","object","addAsMixin","cls","once","removeListener","emit","listenerCount","removeAllListeners","Shader","coreContext","_initialized","_elements","cleanup","renderer","createShader","isShader","isValidShaderType","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","incActiveTextureCount","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","_updateSource","addUpdateSourceTexture","_getTextureSource","_getIsValid","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","loadError","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","clipX","clipY","_clearResizeMode","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","nonDefaults","precision","isAutosizeTexture","getRenderWidth","getRenderHeight","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","isTexture","ImageTexture","_src","_hasAlpha","src","hasAlpha","getOption","fc","charCodeAt","platform","loadSrcTexture","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","font","getFontSetting","_getFontSetting","textBaseline","ff","fontFace","ffs","fontStyle","fontSize","getPrecision","document","fonts","fontSetting","check","text","catch","then","loadPromise","_load","drawText","_draw","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","setFontProperties","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","_calculateRenderInfo","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","space","reduce","acc","char","TextTexture","_this","toString","args","cloneArgs","getDrawingCanvas","draw","assign","getTextureOptionsForDrawingCanvas","_text","_fontStyle","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_letterSpacing","_textIndent","_cutSx","_cutEx","_cutSy","_cutEy","proto","SourceTexture","_textureSource","getRenderPrecision","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","targetValue","isAttached","reset","delay","_updateDrawValue","removeActive","stop","addActive","getDrawValue","attached","dt","delayLeft","duration","invokeListeners","timingFunctionImpl","_timingFunctionImpl","startValue","isTransition","ObjectList","_refs","addAt","currentIndex","setAt","ref","onAdd","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","removeAt","onRemove","onSync","o","createItem","isItem","_setByObject","_setByArray","refs","_getRefs","crefs","cref","idx","array","same","_equalsArray","marker","newItems","_setItems","prevItems","filter","get","ElementChildList","prevChildList","childList","removeChildAt","_setParent","_connectParent","addChildAt","gc","syncChildren","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","setAsRoot","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","isRoot","_throwError","depth","levels","getDepth","getAncestor","o1","o2","l1","l2","_isEnabled","withinBoundsMargin","newAttached","_isAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","addElement","_setActiveFlag","_unsetActiveFlag","removeElement","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","deactivate","_onInactive","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","setDisplayedTextureSource","_getRenderWidth","_getRenderHeight","unknownSize","_onResize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","setTextureCoords","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","setToArray","removes","adds","hasTag","currentTags","removeTag","addTag","isUcChar","_addTag","list","mtag","values","res","_getByTag","level","resn","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","localTags","getTags","getLocationString","getSettings","getPrettyString","getNonDefaults","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","_allowChildrenAccess","paths","firstCharCode","remove","message","animations","createAnimation","_getTransition","_setTransition","_transitions","finish","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","start","tree","hasChildren","collectChildren","getProperties","clearRef","setRef","_tag","boundsMargin","offsetX","disableFuncW","disableFuncH","setTags","rectangleTexture","enableTextTexture","isString","onUpdate","onAfterCalcs","onAfterUpdate","create","rtt","transition","setSmooth","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","toLowerCase","isColorProperty","mergeColors","mergeNumbers","getAt","properties","props","key","test","StateMachine","setupStateMachine","event","_hasMethod","_state","__path","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","stateAtLevel","_getStateAtLevel","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","pop","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","tagRoot","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","_this2","__obj","__prop","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","newTarget","prevTarget","_focusPath","cparent","ancestor","getSharedAncestor","isComponent","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","startsWith","_doFireAncestors","fire","_getState","__propertyBinding","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","isNumber","isBoolean","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","CoreQuadOperation","shaderOwner","scissor","quads","getTexture","getElementCore","getElement","renderWidth","renderHeight","getTextureWidth","getTextureHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getAttribsDataByteOffset","coords","getRenderTextureCoords","renderExec","_projection","projection","CoreRenderExecutor","gl","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","addEmpty","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","useDefault","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","location","getUniformLocation","getAttribLocation","glFunction","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","compile","setUniformValue","glProgram","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getProjection","_getProjection","DefaultShader","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","_setUniform","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","WebGLRenderer","shaderProgram","destroy","getWebGL","createTexture","texImage2D","RGBA","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteTexture","premultiplyAlpha","flipBlueRed","texParams","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","RGB","uploadGlTexture","cloneObjShallow","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","C2dCoreQuadOperation","getRenderContext","getSimpleTc","getWhite","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","restore","save","_equalScissorAreas","_restoreContext","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","_addMemoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_imageWorker","_removeKeyHandler","loop","requestAnimationFrame","lp","drawFrame","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","cancelCb","isPng","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","performance","now","changes","keyhandler","_keydownListener","addEventListener","_keyupListener","removeEventListener","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","cap","DITHER","_getDefaultFlag","change","program","va","equal","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","migrate","setProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","setFlag","normalized","stride","setActiveTexture","setPixelStorei","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","red","green","blue","_blendColor","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","_clearColor","_clearDepth","_clearStencil","_colorMask","_cullFace","_depthFunc","flag","_depthMask","zNear","zFar","_depthRange","_frontFace","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","_stencilFunc","_stencilMask","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","_vertexAttrib2f","_vertexAttrib2fv","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","_initStateManager","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","managed","clearNativeTexture","TextureThrottler","_remove","_sources","_data","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","createCoreRenderState","createCoreRenderExecutor","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","_fillRenderState","pixels","Uint8Array","readPixels","_performRender","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","freeRenderTexture","copyRenderTexture","TransitionSettings","_timingFunction","getTimingFunction","TransitionManager","progress","isRunning","_toConsumableArray","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getValue","getAnimatedElements","sv","getResetValue","hasColorProperty","selector","resetValue","parse","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","action","aas","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","play","STOPPED","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","Stage","_setOptions","_lastGcFrame","platformType","isWebglSupported","createWebGLContext","createCanvasContext","_mode","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","opt","app","log","startLoop","stopLoop","_updatingFrame","getHrTime","fixedDt","processSome","nextFrame","getRgbaComponentsNormalized","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","freeUnusedRenderTextures","serviceprovider","addServiceProvider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","updateFocusSettings","__keymap","registerKeydownHandler","_receiveKeydown","registerKeyupHandler","_receiveKeyup","__options","setApplication","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_focus","_unfocus","_focusChange","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","_getFocused","newParts","events","focusPath","_getMostSpecificHandledMember","returnValue","keyCode","hasTimer","longpress","focusTopDownEvent","focusBottomUpEvent","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","Tools","canvasFactory","content","radius","strokeWidth","strokeColor","fillColor","createRoundRect","getCanvasTexture","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","margin","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","NEAREST","HtmlTexture","_htmlElement","_scale","htmlElement","innerHTML","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","firstElementChild","_preloadArea","attachShadow","style","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_get","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","ps","wasVisible","invisibleItem","getWrapper","checkStarted","ri","LinearBlurShader","_direction","_kernelRadius","uniform1i","redraw","BoxBlurShader","BlurShader","_amount","FastBlurComponent","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_paddingX","_paddingY","_updateBlurSize","_textwrap","sel","Textwrap","C2dBlurShader","Content","paddingX","paddingY","kernelRadius","_amountToKernelRadius","_multiSpline","getSpline","_layers","_output","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_buildLayers","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","ContentWrap","Scale","its","scalers","useScalers","_setIterations","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","first","borderWidth","Borders","Top","Right","Bottom","Left","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","WebGLGrayscaleShader","C2dGrayscaleShader","WebGLDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","getElementWidth","getElementHeight","getVertexAttribPointerOffset","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","full","_shiftBuckets","_values","_valuesTexture","ALPHA","_getValues","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","renderPrecision","renderContext","num","_sc","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","spinSync","bool","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}